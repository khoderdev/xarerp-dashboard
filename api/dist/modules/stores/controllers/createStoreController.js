"use strict";
// import { Request, Response } from 'express';
// import { createStoreService } from '../services/createStoreService';
// import { v4 as uuidV4 } from 'uuid';
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.create = void 0;
const createStoreService_1 = require("../services/createStoreService");
const create = (req, res) => __awaiter(void 0, void 0, void 0, function* () {
    try {
        const { name, type } = req.body;
        if (!name || !type) {
            return res.status(400).json({ error: "Incomplete data" });
        }
        // Since the id is auto-generated by Prisma, you should not include it here
        const store = yield createStoreService_1.createStoreService.create({
            name,
            type,
        });
        if (!store) {
            return res.status(500).json({ error: "Internal server error" });
        }
        return res.status(201).json({ store });
    }
    catch (err) {
        console.log(err);
        return res.status(500).json({ error: "InternalServerError" });
    }
});
exports.create = create;
